{"version":3,"sources":["api/users.ts","helpers.tsx","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","findUserById","userId","usersFromServer","find","user","preparedTodo","title","completed","map","todo","getNewId","todos","ids","item","maxId","Math","max","Number","isFinite","UserInfo","className","href","TodoInfo","cn","TodoList","App","useState","setTodos","queryTitle","setQueryTitle","setuserId","userError","setUserError","titleError","setTitleError","action","method","onSubmit","event","preventDefault","titleValidation","trim","prevTodos","newTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95e74dd2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User, Todo } from './types';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport function findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const preparedTodo = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const getNewId = (todos: Todo[]) => {\n  const ids = todos.map(item => item.id);\n  const maxId = Math.max(...ids);\n\n  return (\n    Number.isFinite(maxId)\n      ? maxId + 1\n      : 1\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types';\n\ninterface Props {\n  user: User;\n}\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const { completed, user, title } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { FC, useState } from 'react';\nimport { getNewId, findUserById, preparedTodo } from './helpers';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport { Todo } from './types';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodo);\n\n  const [queryTitle, setQueryTitle] = useState('');\n  const [userId, setuserId] = useState(0);\n\n  const [userError, setUserError] = useState('');\n  const [titleError, setTitleError] = useState('');\n\n  const selectedUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserError('');\n    setuserId(+value);\n  };\n\n  const handleQueryTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitleError('');\n    setQueryTitle(value);\n  };\n\n  const clearForm = () => {\n    setQueryTitle('');\n    setuserId(0);\n    setTitleError('');\n    setUserError('');\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const titleValidation = queryTitle.trim();\n\n    if (!titleValidation || !userId) {\n      if (!userId) {\n        setUserError('Please choose a user');\n      }\n\n      if (!titleValidation) {\n        setTitleError('Please enter a title');\n      }\n\n      return;\n    }\n\n    setTodos(prevTodos => {\n      const newTodo = {\n        id: getNewId(prevTodos),\n        title: queryTitle,\n        completed: false,\n        userId,\n        user: findUserById(+userId),\n      };\n\n      return [...prevTodos, newTodo];\n    });\n\n    clearForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={queryTitle}\n              onChange={handleQueryTitle}\n            />\n          </label>\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={selectedUser}\n            >\n              <option value={0} disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}